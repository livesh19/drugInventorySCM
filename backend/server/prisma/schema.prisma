generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  phone    String    @unique
  userType UserType
  passenger Passenger?
  admin    Admin?
  otps     Otp[]     @relation("UserOtps")
}

model Passenger {
  userId             Int     @unique
  user               User    @relation(fields: [userId], references: [id])
  passengerId        String  @unique
  name               String
  email              String  @unique
  phone              String  @unique
  passportNumber     String? 
  frequentFlyerNo    String?
  dateOfBirth        DateTime?
  bookings          FlightBooking[]
}

model Admin {
  id          Int     @id @default(autoincrement())
  userId      Int     @unique
  user        User    @relation(fields: [userId], references: [id])
  role        String
  permissions String?
}

model Otp {
  id        Int      @id @default(autoincrement())
  userId    Int
  otp       String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], name: "UserOtps")
}

model FlightBooking {
  id               Int        @id @default(autoincrement())
  bookingReference String     @unique
  passengerId      Int
  flightId         Int
  bookingStatus    BookingStatus @default(PENDING)
  seatNumber       String?
  fareAmount       Float
  bookingDate      DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  // Relationships
  passenger        Passenger  @relation(fields: [passengerId], references: [userId])
  flight           Flight     @relation(fields: [flightId], references: [id])
  
  @@index([passengerId])
  @@index([flightId])
}

model Flight {
  id              Int        @id @default(autoincrement())
  flightNumber    String     @unique
  airline         String
  departureCity   String
  arrivalCity     String
  departureTime   DateTime
  arrivalTime     DateTime
  aircraft        String?
  totalSeats      Int
  availableSeats  Int
  basePrice       Float
  status          FlightStatus @default(SCHEDULED)
  
  // Relationships
  bookings        FlightBooking[]
}

enum UserType {
  PASSENGER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum FlightStatus {
  SCHEDULED
  DELAYED
  CANCELLED
  COMPLETED
}